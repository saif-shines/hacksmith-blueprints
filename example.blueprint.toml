# Hacksmith Blueprint: Generic Product Onboarding
# Authoring notes:
# - Keep this file product-agnostic; fill in provider-specific URLs and copy.
# - You can safely remove sections you don't need. Unknown keys are ignored by older CLIs.
# - Multi-line instructional text supports TOML multi-line strings (""" ... """).

schema_version = "0.1"
smith="saif-shines/hacksmith-blueprints"
description = "Example blueprint for onboarding a user to Scalekit for SSO"

# Optional preview for human-friendly summary
[preview]
enabled = true
title = "Onboard to Scalekit for SSO"
estimated_time = "60s"

steps = [
  "Create account or login",
  "Capture identifiers and API credentials",
  "Configure redirect/callback",
  "Install SDK or generate integration prompt"
]

# Variables captured during the flow. Keep names simple and reusable across products.
[variables.environment_id]
description = "Environment identifier from dashboard (e.g., env_123456)"
required = true
sensitive = false
validation = "^env_[0-9]+$"

[variables.environment_url]
description = "Environment base URL (from API settings)"
required = true
sensitive = false

[variables.client_id]
description = "Client ID from API credentials"
required = true
sensitive = false

[variables.client_secret]
description = "Client Secret from API credentials"
required = true
sensitive = true

# Optional: Persist outputs to files if/when the CLI supports it
[output]
storage_path = "~/.hacksmith/config"
# config_filename = "onboarding.config.json"
# credentials_filename = "credentials.secrets.json"
# mission_brief_filename = "mission-brief.txt"
# contextifact_filename = "contextifact.txt"

# Optional security knobs
# [security]
# encrypt_credentials = false
# credential_expiry_days = 0
# require_confirmation_for_sensitive = true

# Product context and references (docs, samples, API specs)
[context.documentation]
primary_docs = "https://docs.example.com"
quickstart_guide = "https://docs.example.com/quickstart"
api_reference = "https://docs.example.com/api"
sso_guide = "https://docs.example.com/sso"

[context.community]
discord = "https://discord.gg/example"
support_email = "support@example.com"

[context.github_samples]
main_repo = "https://github.com/example/product"
examples_repo = "https://github.com/example/examples"
sample_apps = ["https://github.com/example/sample-app-1"]

[context.swagger_spec]
api_spec_url = "https://api.example.com/openapi.json"
interactive_docs = "https://api.example.com/docs"
postman_collection = "https://api.example.com/postman.json"

[sdk]
preferred_language = "node"
package_manager = "npm"
framework_hints = ["node", "python", "go", "nextjs"]

# Reusable URL pieces for templating
[slugs]
base_url = "https://app.scalekit.cloud"

[slugs.static]
login="https://auth.scalekit.cloud/a/auth/login"
signup="https://auth.scalekit.cloud/a/auth/signup"

[slugs.dynamic]
dashboard = "/ws/environments/{{ environment_id }}/quick-start"
api_credentials = "/ws/environments/{{ environment_id }}/settings/api-credentials"
auth_redirects = "/ws/environments/{{ environment_id }}/authentication/redirects"

# Optional: general-purpose prompt template building block
[contextifact]
prompt_template = """
You are helping integrate the Example product without a prebuilt SDK.
Inputs:
- Environment ID: {{ environment_id }}
- Environment URL: {{ environment_url }}
- Client ID: {{ client_id }}
- Client Secret: {{ client_secret }}
Goal: Outline the exact code changes and API calls needed to authenticate
and fetch a minimal resource, with curl and language-agnostic examples.
Include redirect config for {{ auth.callback_path }} if relevant.
"""

# --- Proposed step protocol (forward-compatible). Current CLI will parse this
# --- structure but may not yet execute steps. It is safe to leave here.

[[flows]]
id = "scalekit"
title = "Onboard onto Scalekit"

# 1) Welcome / overview
[[flows.steps]]
type = "info"
title = "Welcome to Scalekit!"
markdown = """
You are going to get ready to use Scalekit for integrating SSO into your applications.
"""

[[flows.steps]]
type = "choice"
title = "Do you have Scalekit account?"
markdown = """
Also, make sure you are signed in to Scalekit in your current browser session.
- Yes: Takes you to login page
- No: Takes you to signup page
- Continue: Takes you to dashboard (browser session)
"""
save_to = "has_scalekit_account"
options = ["Yes", "No", "Continue"]

[[flows.steps]]
type = "navigate"
title = "Sign up for Scalekit"
when = "has_scalekit_account == 'No'"
url = "{{ slugs.static.signup }}"
instructions = [
  "Complete the signup form",
  "Verify your email",
  "Continue to access your dashboard"
]

[[flows.steps]]
type = "navigate"
title = "Log in to Scalekit"
when = "has_scalekit_account == 'Yes'"
url = "{{ slugs.static.login }}"
instructions = [
  "Enter your email",
  "Choose your auth method to login",
  "Continue to access your dashboard"
]

[[flows.steps]]
type = "input"
title = "Paste Environment ID"
markdown = """
Locate your Environment ID on the dashboard in browser address bar, and copy it (e.g., env_123...)
"""
save_to = "environment_id"
validate.pattern = "^env_[0-9]+$"
validate.message = "Must look like env_123456..."

# 4) Capture API credentials
[[flows.steps]]
type = "navigate"
title = "Open API credentials"
url = "{{ slugs.base_url }}{{ slugs.dynamic.api_credentials }}"
instructions = [
  "Copy Client ID, Client Secret, and Environment URL"
]

[[flows.steps]]
type = "input"
title = "Paste API credentials"
# Multiple inputs captured in a single step
[[flows.steps.inputs]]
name = "client_id"
sensitive = false

[[flows.steps.inputs]]
name = "client_secret"
sensitive = true

[[flows.steps.inputs]]
name = "environment_url"
sensitive = false

[[flows.steps]]
type = "info"
title = "Redirect Endpoint"
markdown = """
You app should expose a redirect endpoint, for scalekit to send your app user information. Read more about it [here](https://docs.scalekit.com).
Hacksmith will help you implement it based on your current project, we let you decide what slug to this redirect endpoint to be.
"""

# 5) Configure redirect URL
[[flows.steps]]
type = "navigate"
title = "Open Authentication Redirects"
url = "{{ slugs.base_url }}{{ slugs.dynamic.auth_redirects }}"
instructions = [
  "Enter the chosen redirect URL for your app (e.g., http://localhost:3000{{ auth.callback_path }})",
  "Click Add to register it"
]

# 6) Choose stack
[[flows.steps]]
type = "choice"
title = "Pick your stack"
save_to = "sdk.language"
options = ["node", "python", "go", "nextjs", "no_sdk"]

# 7) SDK-specific guidance
[[flows.steps]]
type = "show_commands"
title = "Install Node.js SDK"
when = "sdk.language == 'node'"
commands = [
  "npm i @vendor/sdk",
  "npx vendor init"
]

[[flows.steps]]
type = "show_commands"
title = "Install Python SDK"
when = "sdk.language == 'python'"
commands = [
  "pip install vendor-sdk"
]

[[flows.steps]]
type = "show_commands"
title = "Install Go SDK"
when = "sdk.language == 'go'"
commands = [
  "go get github.com/vendor/sdk"
]

[[flows.steps]]
type = "show_commands"
title = "Install Next.js SDK"
when = "sdk.language == 'nextjs'"
commands = [
  "npm i @vendor/sdk",
  "npx vendor init --framework nextjs"
]

# 8) No SDK path â€” generate integration prompt
[[flows.steps]]
type = "ai_prompt"
title = "Generate integration guide"
when = "sdk.language == 'no_sdk'"
provider = "claude"
model = "claude-3-7-sonnet"
prompt_template = """
Using:
- Env ID: {{ environment_id }}
- Env URL: {{ environment_url }}
- Client ID: {{ client_id }}
- Client Secret: {{ client_secret }}
Describe minimal API calls and code changes to authenticate and fetch a resource.
Include curl and a language-agnostic outline. Mask secrets in output.
"""
